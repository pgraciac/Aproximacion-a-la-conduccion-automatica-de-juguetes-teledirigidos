import vision
import matplotlib.pyplot as plt
import math

def average_orientation(path, start_index, num_points, log=False):
    total_sin = 0
    total_cos = 0
    count = 0

    for i in range(start_index, start_index + num_points):
        if i + 1 >= len(path):
            break
        if log:
            print(path[i])
            print(vision.orientation_two_points(path[i], path[i+1]))
        
        angle_deg = vision.orientation_two_points(path[i], path[i+1])
        angle_deg = angle_deg + 360 if angle_deg < 0 else angle_deg
        angle_rad = math.radians(angle_deg)

        total_sin += math.sin(angle_rad)
        total_cos += math.cos(angle_rad)
        count += 1

    if count == 0:
        return None  # O devuelve un valor predeterminado si es m치s adecuado

    average_sin = total_sin / count
    average_cos = total_cos / count

    mean_angle_rad = math.atan2(average_sin, average_cos)
    mean_angle_deg = math.degrees(mean_angle_rad)  # Omitir si prefieres radianes
    return mean_angle_deg

path = [(337, 393), (339, 393), (340, 393), (342, 393), (343, 393), (345, 393), (347, 393), (348, 393), (350, 393), (351, 393), (353, 392), (354, 392), (355, 392), (358, 391), (360, 391), (363, 391), (365, 391), (366, 391), (368, 390), (370, 390), (372, 390), (374, 390), (376, 390), (379, 390), (381, 390), (383, 390), (384, 390), (385, 389), (386, 389), (388, 389), (389, 389), (390, 389), (391, 389), (392, 389), (393, 389), (394, 389), (395, 388), (397, 388), (399, 387), (400, 387), (403, 387), (404, 387), (405, 386), (406, 386), (407, 386), (410, 386), (411, 386), (413, 386), (415, 386), (416, 386), (419, 385), (420, 385), (422, 385), (424, 385), (425, 385), (426, 385), (427, 385), (429, 385), (431, 385), (434, 385), (436, 385), (438, 385), (439, 385), (442, 385), (444, 385), (447, 385), (448, 385), (449, 385), (450, 386), (451, 386), (453, 386), (454, 386), (455, 386), (456, 386), (458, 386), (459, 386), (460, 386), (462, 386), (463, 386), (464, 386), (465, 386), (467, 386), (468, 386), (469, 386), (471, 386), (472, 386), (473, 386), (475, 386), (479, 386), (481, 386), (484, 386), (485, 386), (486, 386), (489, 386), (490, 386), (493, 386), (494, 386), (495, 386), (498, 386), (499, 386), (501, 386), (502, 386), (504, 386), (506, 386), (507, 386), (509, 386), (510, 386), (511, 386), (512, 386), (513, 386), (515, 386), (517, 386), (520, 386), (521, 386), (522, 386), (524, 385), (525, 385), (526, 385), (529, 385), (530, 385), (532, 385), (539, 385), (548, 385), (559, 387), (570, 390), (574, 391), (575, 391), (577, 391), (578, 391), (580, 392), (582, 393), (584, 393), (588, 394), (590, 394), (596, 396), (599, 397), (600, 397), (602, 398), (604, 398), (605, 398), (607, 399), (608, 399), (610, 399), (613, 399), (615, 400), (616, 400), (617, 401), (619, 401), (620, 402), (621, 402), (622, 402), (623, 402), (624, 402), (626, 402), (627, 402), (628, 402), (629, 402), (631, 403), (632, 403), (633, 403), (635, 403), (636, 404), (639, 404), (641, 404), (642, 404), (644, 404), (645, 404), (646, 404), (650, 404), (651, 404), (652, 404), (654, 404), (655, 404), (656, 404), (659, 404), (661, 404), (665, 404), (666, 404), (667, 404), (669, 404), (672, 404), (674, 404), (677, 404), (679, 404), (682, 404), (684, 404), (687, 404), (690, 404), (692, 404), (693, 404), (695, 404), (696, 404), (697, 404), (698, 404), (699, 404), (700, 404), (702, 404), (703, 404), (706, 403), (709, 403), (710, 403), (712, 403), (713, 403), (715, 403), (716, 403), (717, 402), (719, 402), (721, 401), (725, 401), (727, 400), (729, 400), (730, 400), (730, 399), (731, 399), (732, 399), (733, 399), (734, 399), (735, 399), (736, 398), (737, 398), (738, 397), (739, 397), (741, 396), (742, 396), (743, 396), (744, 396), (746, 395), (750, 394), (753, 393), (756, 393), (758, 393), (761, 392), (762, 392), (763, 392), (766, 392), (768, 392), (765, 388), (764, 387), (761, 385), (761, 384), (760, 383), (759, 382), (758, 381), (756, 379), (755, 379), (755, 378), (753, 378), (753, 376), (752, 376), (752, 375), (751, 375), (751, 374), (750, 374), (750, 372), (749, 371), (747, 368), (746, 365), (745, 364), (744, 362), (743, 362), (742, 360), (741, 359), (740, 357), (739, 356), (739, 354), (738, 353), (736, 352), (736, 350), (736, 349), (734, 348), (734, 346), (732, 343), (729, 341), (729, 339), (728, 338), (727, 337), (727, 335), (726, 334), (725, 333), (725, 332), (723, 329), (722, 328), (721, 327), (721, 326), (719, 325), (719, 323), (717, 322), (714, 319), (714, 318), (712, 316), (712, 315), (710, 313), (709, 312), (708, 311), (707, 309), (705, 306), (704, 304), (703, 303), (702, 302), (702, 300), (701, 299), (700, 297), (699, 296), (698, 295), (697, 293), (695, 292), (694, 290), (693, 287), (691, 286), (690, 284), (689, 282), (689, 281), (687, 278), (685, 277), (684, 275), (682, 274), (682, 272), (681, 271), (679, 270), (679, 268), (679, 267), (678, 265), (677, 264), (676, 262), (676, 261), (674, 260), (674, 259), (673, 258), (673, 257), (672, 256), (672, 255), (670, 253), (670, 252), (668, 251), (668, 249), (665, 246), (664, 245), (664, 243), (663, 242), (661, 240), (659, 239), (659, 238), (657, 236), (657, 235), (655, 234), (654, 233), (653, 231), (652, 231), (651, 228), (650, 228), (649, 226), (648, 225), (647, 223), (646, 222), (644, 221), (643, 218), (641, 217), (640, 215), (639, 214), (636, 210), (634, 208), (633, 206), (632, 204), (629, 200), (628, 199), (626, 197), (625, 196), (623, 195), (622, 192), (620, 191), (619, 189), (617, 187), (616, 186), (614, 183), (613, 182), (611, 180), (610, 179), (608, 177), (607, 176), (605, 175), (604, 172), (602, 170), (599, 166), (599, 164), (597, 163), (597, 161), (595, 160), (594, 159), (592, 156), (591, 154), (590, 152), (588, 149), (587, 148), (585, 147), (583, 144), (582, 142), (582, 141), (580, 138), (579, 137), (578, 136), (578, 134), (576, 131), (574, 130), (573, 129), (571, 127), (570, 126), (569, 124), (568, 123), (565, 120), (564, 119), (563, 117), (562, 116), (561, 114), (560, 113), (559, 111), (557, 110), (556, 108), (554, 106), (553, 103), (551, 102), (548, 98), (544, 94), (543, 91), (541, 89), (540, 88), (539, 87), (537, 86), (536, 83), (533, 80), (530, 76), (528, 74), (527, 73), (526, 71), (524, 69), (523, 68), (521, 66), (520, 63), (519, 62), (517, 61), (516, 59), (513, 56), (511, 55), (510, 53), (508, 51), (507, 50), (506, 48), (504, 47), (504, 46), (503, 44), (502, 44), (501, 42), (500, 41), (500, 40), (499, 39), (498, 38), (497, 36), (495, 34), (494, 33)]
path_orientation = average_orientation(path, 0, 10)
path_spins = []
for i in range(10, len(path) - 10):
    actual_path_orientation = average_orientation(path, i-10, 10)
    path_orientation = average_orientation(path, i, 10)
    error = (path_orientation - actual_path_orientation + 180) % 360 - 180
    if abs(error) > 30:
        print(average_orientation(path, i + 1, 10, True))
        print(f"actual orientation: {actual_path_orientation}")
        print(f"path orientation: {path_orientation}")
        print(error)
        print(path[i+1], "\n------------------------------------\n")
        path_spins.append(path[i+1])
        # path_orientation = average_orientation(path, i + 1, 10)

x_path, y_path = zip(*path)

# Extrae las coordenadas x e y de path_spins en listas separadas
x_spins, y_spins = zip(*path_spins)

# Crea la gr치fica
plt.figure(figsize=(8, 6))
plt.plot(x_path, y_path, 'r-', label='Path')
plt.scatter(x_path, y_path, c='r', label='Path', marker='o')
plt.scatter(x_spins, y_spins, c='g', label='Spins', marker='o')

# Etiqueta los ejes
plt.xlabel('Coordenada X')
plt.ylabel('Coordenada Y')

# A침ade una leyenda
plt.legend()

# Muestra la gr치fica
plt.show()